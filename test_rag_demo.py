#!/usr/bin/env python3
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —É–ª—É—á—à–µ–Ω–Ω–æ–π RAG —Å–∏—Å—Ç–µ–º—ã —Å —Ç–µ–∫—Å—Ç–æ–≤—ã–º–∏ –æ–ø–∏—Å–∞–Ω–∏—è–º–∏
"""

from unittest.mock import AsyncMock

from wpg_engine.core.rag_system import RAGSystem


def test_rag_with_descriptions():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ç–æ–≥–æ, –∫–∞–∫ RAG —Ç–µ–ø–µ—Ä—å –≤–∫–ª—é—á–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –æ–ø–∏—Å–∞–Ω–∏—è"""

    # –°–æ–∑–¥–∞–µ–º –º–æ–∫ RAG —Å–∏—Å—Ç–µ–º—ã
    mock_db = AsyncMock()
    rag_system = RAGSystem(mock_db)

    # –ü—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö —Å—Ç—Ä–∞–Ω —Å –æ–ø–∏—Å–∞–Ω–∏—è–º–∏
    countries_data = [
        {
            "name": "–°–æ–ª—è—Ä–∏—è",
            "capital": "–°–æ–ª–Ω–µ—á–Ω—ã–π –ì–æ—Ä–æ–¥",
            "population": 5000000,
            "synonyms": ["–°–æ–ª–Ω–µ—á–Ω–∞—è –ò–º–ø–µ—Ä–∏—è", "–°–ò"],
            "aspects": {
                "economy": 7,
                "military": 8,
                "foreign_policy": 6,
                "territory": 7,
                "technology": 9,
                "religion_culture": 5,
                "governance_law": 8,
                "construction_infrastructure": 7,
                "social_relations": 6,
                "intelligence": 7,
            },
            "descriptions": {
                "economy": "–†–∞–∑–≤–∏—Ç–∞—è –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ—Å—Ç—å —Å –∞–∫—Ü–µ–Ω—Ç–æ–º –Ω–∞ —Å–æ–ª–Ω–µ—á–Ω—É—é —ç–Ω–µ—Ä–≥–µ—Ç–∏–∫—É",
                "military": "–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –∞—Ä–º–∏—è —Å –≤—ã—Å–æ–∫–æ—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–Ω—ã–º –æ—Ä—É–∂–∏–µ–º –Ω–∞ —Å–æ–ª–Ω–µ—á–Ω—ã—Ö –±–∞—Ç–∞—Ä–µ—è—Ö",
                "foreign_policy": "–ê–∫—Ç–∏–≤–Ω–∞—è –¥–∏–ø–ª–æ–º–∞—Ç–∏—è, –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π",
                "territory": "–û–±—à–∏—Ä–Ω—ã–µ —Å–æ–ª–Ω–µ—á–Ω—ã–µ —Ä–∞–≤–Ω–∏–Ω—ã, –∏–¥–µ–∞–ª—å–Ω—ã–µ –¥–ª—è —ç–Ω–µ—Ä–≥–µ—Ç–∏–∫–∏",
                "technology": "–ú–∏—Ä–æ–≤–æ–π –ª–∏–¥–µ—Ä –≤ –æ–±–ª–∞—Å—Ç–∏ —Å–æ–ª–Ω–µ—á–Ω—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –∏ —á–∏—Å—Ç–æ–π —ç–Ω–µ—Ä–≥–∏–∏",
                "religion_culture": "–ö—É–ª—å—Ç –°–æ–ª–Ω—Ü–∞, –ø–æ–∫–ª–æ–Ω–µ–Ω–∏–µ —Å–≤–µ—Ç–∏–ª—É –∫–∞–∫ –∏—Å—Ç–æ—á–Ω–∏–∫—É –∂–∏–∑–Ω–∏",
                "governance_law": "–ö–æ–Ω—Å—Ç–∏—Ç—É—Ü–∏–æ–Ω–Ω–∞—è –º–æ–Ω–∞—Ä—Ö–∏—è —Å –°–æ–≤–µ—Ç–æ–º –°–æ–ª–Ω—Ü–∞",
                "construction_infrastructure": "–†–∞–∑–≤–∏—Ç–∞—è —Å–µ—Ç—å —Å–æ–ª–Ω–µ—á–Ω—ã—Ö —ç–ª–µ–∫—Ç—Ä–æ—Å—Ç–∞–Ω—Ü–∏–π",
                "social_relations": "–°—Ç–∞–±–∏–ª—å–Ω–æ–µ –æ–±—â–µ—Å—Ç–≤–æ, –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω–æ–µ –∏–¥–µ–µ–π —á–∏—Å—Ç–æ–π —ç–Ω–µ—Ä–≥–∏–∏",
                "intelligence": "–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ —Å–ø–µ—Ü—Å–ª—É–∂–±—ã '–°–æ–ª–Ω–µ—á–Ω—ã–π –ì–ª–∞–∑'",
            },
        },
        {
            "name": "–í–∏—Ä–¥–∂–∏–Ω–∏—è",
            "capital": "–†–∏—á–º–æ–Ω–¥",
            "population": 3000000,
            "synonyms": ["–í–∏—Ä–≥", "–í–†"],
            "aspects": {
                "economy": 6,
                "military": 5,
                "foreign_policy": 7,
                "territory": 6,
                "technology": 6,
                "religion_culture": 8,
                "governance_law": 7,
                "construction_infrastructure": 6,
                "social_relations": 7,
                "intelligence": 5,
            },
            "descriptions": {
                "economy": "–ê–≥—Ä–∞—Ä–Ω–∞—è —ç–∫–æ–Ω–æ–º–∏–∫–∞ —Å —Ä–∞–∑–≤–∏—Ç—ã–º —Ç–∞–±–∞—á–Ω—ã–º –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ–º",
                "military": "–¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–∞—è –∞—Ä–º–∏—è —Å –∞–∫—Ü–µ–Ω—Ç–æ–º –Ω–∞ –∫–∞–≤–∞–ª–µ—Ä–∏—é",
                "foreign_policy": "–î–∏–ø–ª–æ–º–∞—Ç–∏—è –¥–∂–µ–Ω—Ç–ª—å–º–µ–Ω–æ–≤, —Å—Ç–∞—Ä—ã–µ —Ç—Ä–∞–¥–∏—Ü–∏–∏",
                "territory": "–ü–ª–æ–¥–æ—Ä–æ–¥–Ω—ã–µ –∑–µ–º–ª–∏, —Ö–æ–ª–º–∏—Å—Ç–∞—è –º–µ—Å—Ç–Ω–æ—Å—Ç—å",
                "technology": "–ö–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∫ –Ω–æ–≤—ã–º —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º",
                "religion_culture": "–ì–ª—É–±–æ–∫–∏–µ —Ö—Ä–∏—Å—Ç–∏–∞–Ω—Å–∫–∏–µ —Ç—Ä–∞–¥–∏—Ü–∏–∏, –∞—Ä–∏—Å—Ç–æ–∫—Ä–∞—Ç–∏—á–µ—Å–∫–∞—è –∫—É–ª—å—Ç—É—Ä–∞",
                "governance_law": "–†–µ—Å–ø—É–±–ª–∏–∫–∞ —Å —Å–∏–ª—å–Ω—ã–º–∏ —Ç—Ä–∞–¥–∏—Ü–∏—è–º–∏ —Å–∞–º–æ—É–ø—Ä–∞–≤–ª–µ–Ω–∏—è",
                "construction_infrastructure": "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞, –∂–µ–ª–µ–∑–Ω—ã–µ –¥–æ—Ä–æ–≥–∏",
                "social_relations": "–¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–æ–µ –æ–±—â–µ—Å—Ç–≤–æ —Å —á–µ—Ç–∫–æ–π –∏–µ—Ä–∞—Ä—Ö–∏–µ–π",
                "intelligence": "–†–∞–∑–≤–µ–¥–∫–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ª–∏—á–Ω—ã—Ö —Å–≤—è–∑–µ–π –∏ —Ç—Ä–∞–¥–∏—Ü–∏–π",
            },
        }
    ]

    # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–º–ø—Ç
    message = "–•–æ—á—É –Ω–∞–ø–∞—Å—Ç—å –Ω–∞ –í–∏—Ä–¥–∂–∏–Ω–∏—é —Å –ø–æ–º–æ—â—å—é –Ω–æ–≤—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π"
    sender_country = "–°–æ–ª—è—Ä–∏—è"

    prompt = rag_system._create_analysis_prompt(message, sender_country, countries_data)

    print("=" * 80)
    print("üîç –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –£–õ–£–ß–®–ï–ù–ù–û–ô RAG –°–ò–°–¢–ï–ú–´")
    print("=" * 80)
    print(f"–°–æ–æ–±—â–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–∞: {message}")
    print(f"–°—Ç—Ä–∞–Ω–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è: {sender_country}")
    print("=" * 80)
    print("–ü–†–û–ú–ü–¢ –î–õ–Ø LLM (—Å —Ç–µ–∫—Å—Ç–æ–≤—ã–º–∏ –æ–ø–∏—Å–∞–Ω–∏—è–º–∏):")
    print("=" * 80)
    print(prompt)
    print("=" * 80)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ–ø–∏—Å–∞–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã
    assert "–†–∞–∑–≤–∏—Ç–∞—è –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ—Å—Ç—å —Å –∞–∫—Ü–µ–Ω—Ç–æ–º –Ω–∞ —Å–æ–ª–Ω–µ—á–Ω—É—é —ç–Ω–µ—Ä–≥–µ—Ç–∏–∫—É" in prompt
    assert "–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –∞—Ä–º–∏—è —Å –≤—ã—Å–æ–∫–æ—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–Ω—ã–º –æ—Ä—É–∂–∏–µ–º –Ω–∞ —Å–æ–ª–Ω–µ—á–Ω—ã—Ö –±–∞—Ç–∞—Ä–µ—è—Ö" in prompt
    assert "–ú–∏—Ä–æ–≤–æ–π –ª–∏–¥–µ—Ä –≤ –æ–±–ª–∞—Å—Ç–∏ —Å–æ–ª–Ω–µ—á–Ω—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π" in prompt
    assert "–ê–≥—Ä–∞—Ä–Ω–∞—è —ç–∫–æ–Ω–æ–º–∏–∫–∞ —Å —Ä–∞–∑–≤–∏—Ç—ã–º —Ç–∞–±–∞—á–Ω—ã–º –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ–º" in prompt
    assert "–¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–∞—è –∞—Ä–º–∏—è —Å –∞–∫—Ü–µ–Ω—Ç–æ–º –Ω–∞ –∫–∞–≤–∞–ª–µ—Ä–∏—é" in prompt

    print("‚úÖ –£–°–ü–ï–•: –í—Å–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –æ–ø–∏—Å–∞–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã –≤ –ø—Ä–æ–º–ø—Ç!")
    print("‚úÖ –¢–µ–ø–µ—Ä—å RAG —Å–∏—Å—Ç–µ–º–∞ —É—á–∏—Ç—ã–≤–∞–µ—Ç –Ω–µ —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã, –Ω–æ –∏ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –æ–ø–∏—Å–∞–Ω–∏—è –ø–æ–ª–µ–π —Å—Ç—Ä–∞–Ω!")


if __name__ == "__main__":
    test_rag_with_descriptions()
