#!/bin/bash

# Debug script for authentication issues
# This script helps diagnose Docker authentication problems on Yandex Cloud

set -e

# Colors
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

echo_info() { echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"; }
echo_success() { echo -e "${GREEN}‚úÖ $1${NC}"; }
echo_warning() { echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"; }
echo_error() { echo -e "${RED}‚ùå $1${NC}"; }

echo_info "üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ Docker –Ω–∞ Yandex Cloud"
echo ""

# Check if running on Yandex Cloud
echo_info "1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–∞..."
METADATA_RESPONSE=$(curl -s -H "Metadata-Flavor: Google" http://169.254.169.254/computeMetadata/v1/instance/service-accounts/default/token 2>/dev/null || echo "ERROR")

if [ "$METADATA_RESPONSE" = "ERROR" ]; then
    echo_warning "–ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ —Å–µ—Ä–≤–∏—Å–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã (–≤–æ–∑–º–æ–∂–Ω–æ, –Ω–µ –Ω–∞ Yandex Cloud VM)"
else
    echo_success "–ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ —Å–µ—Ä–≤–∏—Å–∞ –¥–æ—Å—Ç—É–ø–Ω—ã"
    echo "–û—Ç–≤–µ—Ç: $METADATA_RESPONSE"
    
    # Check if response is valid JSON
    if echo "$METADATA_RESPONSE" | jq -e . >/dev/null 2>&1; then
        echo_success "–û—Ç–≤–µ—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω"
        ACCESS_TOKEN=$(echo "$METADATA_RESPONSE" | jq -r '.access_token // empty' 2>/dev/null)
        if [ -n "$ACCESS_TOKEN" ] && [ "$ACCESS_TOKEN" != "null" ]; then
            echo_success "–¢–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞ –Ω–∞–π–¥–µ–Ω (–¥–ª–∏–Ω–∞: ${#ACCESS_TOKEN} —Å–∏–º–≤–æ–ª–æ–≤)"
        else
            echo_error "–¢–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –æ—Ç–≤–µ—Ç–µ"
        fi
    else
        echo_error "–û—Ç–≤–µ—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º JSON"
    fi
fi

echo ""

# Check yc CLI
echo_info "2. –ü—Ä–æ–≤–µ—Ä–∫–∞ yc CLI..."
if command -v yc >/dev/null 2>&1; then
    echo_success "yc CLI —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    
    # Check yc authentication
    if yc config list >/dev/null 2>&1; then
        echo_success "yc CLI –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
        
        # Try to create token
        YC_TOKEN=$(yc iam create-token 2>/dev/null || echo "ERROR")
        if [ "$YC_TOKEN" != "ERROR" ] && [ -n "$YC_TOKEN" ]; then
            echo_success "–¢–æ–∫–µ–Ω —á–µ—Ä–µ–∑ yc CLI –ø–æ–ª—É—á–µ–Ω (–¥–ª–∏–Ω–∞: ${#YC_TOKEN} —Å–∏–º–≤–æ–ª–æ–≤)"
        else
            echo_error "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω —á–µ—Ä–µ–∑ yc CLI"
        fi
    else
        echo_warning "yc CLI –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
    fi
else
    echo_error "yc CLI –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

echo ""

# Check Docker
echo_info "3. –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker..."
if command -v docker >/dev/null 2>&1; then
    echo_success "Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    
    # Check Docker daemon
    if docker info >/dev/null 2>&1; then
        echo_success "Docker daemon –∑–∞–ø—É—â–µ–Ω"
    else
        echo_error "Docker daemon –Ω–µ –∑–∞–ø—É—â–µ–Ω –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    fi
else
    echo_error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

echo ""

# Check jq
echo_info "4. –ü—Ä–æ–≤–µ—Ä–∫–∞ jq..."
if command -v jq >/dev/null 2>&1; then
    echo_success "jq —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (–≤–µ—Ä—Å–∏—è: $(jq --version))"
else
    echo_error "jq –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    echo_info "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ jq: sudo apt-get install jq"
fi

echo ""
echo_info "üèÅ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"